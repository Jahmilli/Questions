/*
 * You live in the city of Cartesia where all roads are laid out in a perfect grid. 
 * You arrived ten minutes too early to an appointment, so you decided to take the opportunity to go for a short walk. 
 * The city provides its citizens with a Walk Generating App on their phones -- 
 * everytime you press the button it sends you an array of one-letter strings representing directions to walk 
 * (eg. ['n', 's', 'w', 'e']). You know it takes you one minute to traverse one city block, 
 * so create a function that will return true if the walk the app gives you will take you exactly ten minutes 
 * (you don't want to be early or late!) and will, of course, return you to your starting point. Return false otherwise.

Note: you will always receive a valid array containing a random assortment of 
direction letters ('n', 's', 'e', or 'w' only). It will never give you an empty array (that's not a walk, that's standing still!).
 */
public class Main {
	public static void main(String[] args) {		  
		char[] letters = {'w','e','w','e','w','e','w','e','w','e','w','e'};
		System.out.println(isValid(letters));
	}
  
	//Create a 2d array where N is +1, S is -1, W is +1 and E is -1 at the end of the array both dimensions should equal 0
	public static boolean isValid(char[] walk) {
		int[] v = new int[1];
		int[] h = new int[1];
		int counter = 0;
		for(char a : walk) {
			switch(a) {
			case 'n': v[0] += 1; break;
			case 's': v[0] -= 1; break;
			case 'w': h[0] += 1; break;
			case 'e': h[0] -= 1; break;
			}
			counter++;
			System.out.println("v[0]:" + v[0] + "\t h[0]: " + h[0] + "\t counter: " + counter);
		}
		if(v[0] == 0 && h[0] == 0 && counter == 10)
			return true;
		else 
			return false;
	  }
	
	  
}
